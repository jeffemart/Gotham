{
    "swagger": "2.0",
    "info": {
        "description": "Gotham é um projeto de uma API desenvolvido para gerenciar usuários, permissões e autenticação de forma robusta e segura.",
        "title": "Gotham API",
        "contact": {
            "name": "Jefferson Martins",
            "url": "https://www.linkedin.com/in/jefferson-martins-a6802b249/",
            "email": "jefferson.developers@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.1.5"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/admin/users/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza os dados de um usuário com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Atualiza as informações de um usuário",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do usuário a serem atualizados",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "ID ou dados inválidos",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro ao atualizar usuário",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exclui um usuário com base no ID fornecido",
                "summary": "Remove um usuário pelo ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário excluído com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro ao excluir usuário",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica o usuário e gera um token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login do usuário",
                "parameters": [
                    {
                        "description": "Credenciais do usuário",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token gerado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Usuário não encontrado ou senha incorreta",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/protected/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtém uma lista de tarefas fictícias para a demonstração",
                "produces": [
                    "application/json"
                ],
                "summary": "Retorna uma lista de tarefas",
                "responses": {
                    "200": {
                        "description": "Lista de tarefas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refresh_token": {
            "post": {
                "description": "Gera um novo token JWT quando fornecido um refresh token válido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gera um novo token JWT usando o refresh token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "refreshRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Novo token gerado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Refresh token inválido",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Obtém uma lista de todos os usuários cadastrados no sistema",
                "produces": [
                    "application/json"
                ],
                "summary": "Retorna todos os usuários",
                "responses": {
                    "200": {
                        "description": "Lista de usuários",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro ao buscar usuários",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo usuário no sistema com os dados fornecidos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Cria um novo usuário",
                "parameters": [
                    {
                        "description": "Dados do novo usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuário criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro ao criar usuário",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Obtém um usuário específico com base no ID fornecido",
                "produces": [
                    "application/json"
                ],
                "summary": "Retorna um usuário pelo ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "ID inválido",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Permission": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.RefreshRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Permission"
                    }
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "roleID": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}