definitions:
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Permission:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  models.Role:
    properties:
      id:
        type: integer
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/models.Permission'
        type: array
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      roleID:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Autentica o usuário e gera um token JWT
      parameters:
      - description: Credenciais do usuário
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token gerado
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: string
        "401":
          description: Usuário não encontrado ou senha incorreta
          schema:
            type: string
      summary: Login do usuário
  /protected/tasks:
    get:
      description: Obtém uma lista de tarefas fictícias para a demonstração
      produces:
      - application/json
      responses:
        "200":
          description: Lista de tarefas
          schema:
            items:
              additionalProperties:
                type: string
              type: object
            type: array
      summary: Retorna uma lista de tarefas
  /refresh_token:
    post:
      consumes:
      - application/json
      description: Gera um novo token JWT quando fornecido um refresh token válido
      parameters:
      - description: Refresh Token
        in: body
        name: refreshRequest
        required: true
        schema:
          $ref: '#/definitions/models.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Novo token gerado
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: string
        "401":
          description: Refresh token inválido
          schema:
            type: string
        "404":
          description: Usuário não encontrado
          schema:
            type: string
      summary: Gera um novo token JWT usando o refresh token
  /users:
    get:
      description: Obtém uma lista de todos os usuários cadastrados no sistema
      produces:
      - application/json
      responses:
        "200":
          description: Lista de usuários
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Erro ao buscar usuários
          schema:
            type: string
      summary: Retorna todos os usuários
    post:
      consumes:
      - application/json
      description: Cria um novo usuário no sistema com os dados fornecidos
      parameters:
      - description: Dados do novo usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário criado com sucesso
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Dados inválidos
          schema:
            type: string
        "500":
          description: Erro ao criar usuário
          schema:
            type: string
      summary: Cria um novo usuário
  /users/{id}:
    delete:
      description: Exclui um usuário com base no ID fornecido
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Usuário excluído com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: ID inválido
          schema:
            type: string
        "500":
          description: Erro ao excluir usuário
          schema:
            type: string
      summary: Remove um usuário pelo ID
    get:
      description: Obtém um usuário específico com base no ID fornecido
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Usuário encontrado
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: ID inválido
          schema:
            type: string
        "404":
          description: Usuário não encontrado
          schema:
            type: string
      summary: Retorna um usuário pelo ID
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um usuário com base no ID fornecido
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      - description: Dados do usuário a serem atualizados
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Usuário atualizado com sucesso
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: ID ou dados inválidos
          schema:
            type: string
        "404":
          description: Usuário não encontrado
          schema:
            type: string
        "500":
          description: Erro ao atualizar usuário
          schema:
            type: string
      summary: Atualiza as informações de um usuário
swagger: "2.0"
